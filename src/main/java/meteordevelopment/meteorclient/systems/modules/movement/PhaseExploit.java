/*
 * This file is part of the Meteor Client distribution (https://github.com/MeteorDevelopment/meteor-client).
 * Copyright (c) Meteor Development.
 */

package meteordevelopment.meteorclient.systems.modules.movement;

import meteordevelopment.meteorclient.events.packets.PacketEvent;
import meteordevelopment.meteorclient.events.world.CollisionShapeEvent;
import meteordevelopment.meteorclient.events.world.TickEvent;
import meteordevelopment.meteorclient.settings.BoolSetting;
import meteordevelopment.meteorclient.settings.DoubleSetting;
import meteordevelopment.meteorclient.settings.Setting;
import meteordevelopment.meteorclient.settings.SettingGroup;
import meteordevelopment.meteorclient.systems.modules.Categories;
import meteordevelopment.meteorclient.systems.modules.Module;
import meteordevelopment.orbit.EventHandler;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec3d;
import net.minecraft.util.shape.VoxelShapes;

import java.util.Objects;

public final class PhaseExploit extends Module {
    private final SettingGroup sgGeneral = settings.getDefaultGroup();

    private final Setting<Boolean> shrink = sgGeneral.add(new BoolSetting.Builder()
        .name("shrink")
        .description("Shrinks players hitbox.")
        .defaultValue(false)
        .build()
    );

    private final Setting<Double> amount = sgGeneral.add(new DoubleSetting.Builder()
        .name("shrink-amount")
        .description("The amount to shrink hitbox.")
        .defaultValue(0.0626)
        .visible(shrink::get)
        .build()
    );

    public PhaseExploit() {
        super(Categories.World, "phase-exploit", "Exploit for all kinds of acs.");
    }

    @EventHandler
    private void onTick(final TickEvent.Pre event) {
        if (shrink.get() && mc.player != null)
            mc.player.setBoundingBox(mc.player.getBoundingBox().shrink(amount.get(), 0, amount.get()));
    }
}
